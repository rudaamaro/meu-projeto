import {C} from './constants.js';
import {tick} from './utils.js';
import {ctx} from './main.js';

export function roundRect(x,y,w,h,r=16){ r=Math.min(r, Math.min(w,h)/2); ctx.beginPath(); ctx.moveTo(x+r,y); ctx.arcTo(x+w,y,x+w,y+h,r); ctx.arcTo(x+w,y+h,x,y+h,r); ctx.arcTo(x,y+h,x,y,r); ctx.arcTo(x,y,x+w,y,r); ctx.closePath(); }
export function drawButton(b){const {x,y,w,h,label,fill=C.accent,stroke=C.stroke,text=C.text}=b;roundRect(x,y,w,h,14);ctx.fillStyle=fill;ctx.fill();if(stroke){ctx.strokeStyle=stroke;ctx.lineWidth=1;ctx.stroke();}ctx.fillStyle=text;ctx.font=`600 ${Math.max(12,Math.floor(h*0.42))}px system-ui`;ctx.textAlign='center';ctx.textBaseline='middle';ctx.fillText(String(label),x+w/2,y+h/2+1);}
export function drawIconButton(b,icon){const {x,y,w,h,fill=C.accent}=b; roundRect(x,y,w,h,14); ctx.fillStyle=fill; ctx.fill(); ctx.strokeStyle=C.stroke; ctx.stroke(); ctx.fillStyle='#06131f'; ctx.font=`700 ${Math.max(12,Math.floor(h*0.6))}px system-ui`; ctx.textAlign='center'; ctx.textBaseline='middle'; ctx.fillText(icon,x+w/2,y+h/2+1);}
export function drawPill(p){const {x,y,w,h,label,active=false}=p; roundRect(x,y,w,h,999); ctx.fillStyle=active?C.accent:'#1f2937'; ctx.fill(); ctx.strokeStyle=active?'rgba(67,182,255,0.5)':C.stroke; ctx.stroke(); ctx.fillStyle=active?'#06131f':C.text; ctx.font='600 13px system-ui'; ctx.textAlign='center'; ctx.textBaseline='middle'; ctx.fillText(label,x+w/2,y+h/2+1);}
export function drawInput(inp){const {x,y,w,h,label,value,placeholder='',focused=false}=inp;roundRect(x,y,w,h,12);ctx.fillStyle='#0f1422';ctx.fill();ctx.strokeStyle=focused?C.accent:C.stroke;ctx.lineWidth=focused?2:1;ctx.stroke();ctx.fillStyle=C.sub;ctx.font='600 12px system-ui';ctx.textAlign='left';ctx.textBaseline='top';if(label)ctx.fillText(label,x+12,y+8);ctx.font='500 18px system-ui';ctx.fillStyle=value?C.text:'rgba(231,238,247,0.4)';const shown=value||placeholder;ctx.fillText(shown+(focused&&tick()%60<30?'|':''),x+12,y+(label?28:12));}
export function drawProgressBar(x,y,w,h,p){roundRect(x,y,w,h,12);ctx.fillStyle='#0f1422';ctx.fill();const ww=Math.max(0,Math.min(1,p))*w;roundRect(x,y,ww,h,12);const g=ctx.createLinearGradient(x,y,x+w,y);g.addColorStop(0,C.accent);g.addColorStop(1,C.accent2);ctx.fillStyle=g;ctx.fill();ctx.strokeStyle=C.stroke;ctx.stroke();ctx.font='600 12px system-ui';ctx.fillStyle=C.text;ctx.textAlign='center';ctx.textBaseline='middle';ctx.fillText(Math.round(Math.max(0,Math.min(1,p))*100)+'%',x+w/2,y+h/2);}
export function drawMultiline(text,x,y,maxW,lineH){const lines=text.split(/\r?\n/); let yy=y; for(const ln of lines){wrapAndDraw(ln,x,yy,maxW,lineH); yy+=lineH*Math.max(1,Math.ceil(ctx.measureText(ln).width/maxW));}}
export function wrapAndDraw(text,x,y,maxW,lineH){const words=text.split(/\s+/); let line='', yy=y; for(const w of words){const test=line?line+' '+w:w; if(ctx.measureText(test).width>maxW){ctx.fillText(line,x,yy); yy+=lineH; line=w;} else {line=test;}} if(line)ctx.fillText(line,x,yy);}
